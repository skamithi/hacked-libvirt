From: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Date: Wed, 5 Aug 2015 02:00:56 -0400
Subject: support-incoming-qemu-kvm

Changelog:
   oct 6 2014 [seh]: rename assume_incoming_qemukvm to allow_incoming_qemukvm.
---
 src/qemu/qemu_conf.c      |  3 +++
 src/qemu/qemu_conf.h      |  3 +++
 src/qemu/qemu_migration.c | 18 ++++++++++++++++++
 3 files changed, 24 insertions(+)

diff --git a/src/qemu/qemu_conf.c b/src/qemu/qemu_conf.c
index 2c397b0..acaa717 100644
--- a/src/qemu/qemu_conf.c
+++ b/src/qemu/qemu_conf.c
@@ -229,6 +229,8 @@ virQEMUDriverConfigPtr virQEMUDriverConfigNew(bool privileged)
     cfg->migrationPortMin = QEMU_MIGRATION_PORT_MIN;
     cfg->migrationPortMax = QEMU_MIGRATION_PORT_MAX;
 
+    cfg->allow_incoming_qemukvm = false;
+
 #if defined HAVE_MNTENT_H && defined HAVE_GETMNTENT_R
     /* For privileged driver, try and find hugepage mount automatically.
      * Non-privileged driver requires admin to create a dir for the
@@ -352,6 +354,7 @@ int virQEMUDriverConfigLoadFile(virQEMUDriverConfigPtr cfg,
             goto cleanup;                  \
     }
 
+    GET_VALUE_BOOL("allow_incoming_qemukvm", cfg->allow_incoming_qemukvm);
     GET_VALUE_BOOL("vnc_auto_unix_socket", cfg->vncAutoUnixSocket);
     GET_VALUE_BOOL("vnc_tls", cfg->vncTLS);
     GET_VALUE_BOOL("vnc_tls_x509_verify", cfg->vncTLSx509verify);
diff --git a/src/qemu/qemu_conf.h b/src/qemu/qemu_conf.h
index c181dc2..1391682 100644
--- a/src/qemu/qemu_conf.h
+++ b/src/qemu/qemu_conf.h
@@ -164,6 +164,9 @@ struct _virQEMUDriverConfig {
     char *migrationAddress;
     int migrationPortMin;
     int migrationPortMax;
+
+    /* Whether incoming pc-1.0 migration should come from qemu-kvm */
+    bool allow_incoming_qemukvm;
 };
 
 /* Main driver state */
diff --git a/src/qemu/qemu_migration.c b/src/qemu/qemu_migration.c
index e917ba7..5eec741 100644
--- a/src/qemu/qemu_migration.c
+++ b/src/qemu/qemu_migration.c
@@ -2101,6 +2101,16 @@ static char
         if (!qemuDomainDefCheckABIStability(driver, vm->def, def))
             goto cleanup;
 
+        if (driver->config->allow_incoming_qemukvm) {
+            if (STREQ_NULLABLE(vm->def->os.machine, "pc-1.0")) {
+                VIR_FREE(vm->def->os.machine);
+                VIR_FREE(def->os.machine);
+                if (VIR_STRDUP(vm->def->os.machine, "pc-1.0-precise") < 0 ||
+                        VIR_STRDUP(def->os.machine, "pc-1.0-precise") < 0)
+                    goto cleanup;
+            }
+        }
+
         rv = qemuDomainDefFormatLive(driver, def, false, true);
     } else {
         rv = qemuDomainDefFormatLive(driver, vm->def, false, true);
@@ -2431,6 +2441,14 @@ qemuMigrationPrepareAny(virQEMUDriverPtr driver,
         goto endjob;
     }
 
+    if (driver->config->allow_incoming_qemukvm) {
+            if (STREQ_NULLABLE(vm->def->os.machine, "pc-1.0")) {
+                VIR_FREE(vm->def->os.machine);
+                if (VIR_STRDUP(vm->def->os.machine, "pc-1.0-precise") < 0)
+                    goto endjob;
+            }
+    }
+ 
     /* Start the QEMU daemon, with the same command-line arguments plus
      * -incoming $migrateFrom
      */
