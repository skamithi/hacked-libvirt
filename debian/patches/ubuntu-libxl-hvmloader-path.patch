From: Stefan Bader <stefan.bader@canonical.com>
Date: Wed, 27 May 2015 14:47:23 +0200
Subject: ubuntu: libxl: Fallback for libxl paths

We need to replace "hvmloader" in the config by the full path, which is a bit complicated because the binary is provided in a versioned subdirectory. Since libvirt is only compiled against *one* version, we always have to try replacing older paths by newer ones as well as options without path by the current full path.

To help with this upstream libvirt started to set LIBXL_FIRMWARE_DIR through dpk-config, but the current Xen (4.5) does not provide a xenlight.pc file. So we need to ensure the value is set by other means and then add code to change paths when post processing the configs.

BugLink: http://bugs.launchpad.net/bugs/1459603

Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

Index: libvirt-1.2.15/configure.ac
===================================================================
--- libvirt-1.2.15.orig/configure.ac	2015-05-28 12:14:03.973494482 +0200
+++ libvirt-1.2.15/configure.ac	2015-05-28 12:14:03.969494482 +0200
@@ -918,6 +918,10 @@ if test "$with_libxl" = "yes"; then
     AC_CHECK_HEADERS([libxlutil.h])
     LIBXL_LIBS="$LIBXL_LIBS -lxlutil"
     AC_DEFINE_UNQUOTED([WITH_LIBXL], 1, [whether libxenlight driver is enabled])
+    if test "x$LIBXL_FIRMWARE_DIR" = "x"; then
+        LIBXL_VERS=`dpkg-query -Wf '${Version}' libxen-dev|cut -d. -f1-2`
+        LIBXL_FIRMWARE_DIR="/usr/lib/xen-$LIBXL_VERS/boot"
+    fi
     if test "x$LIBXL_FIRMWARE_DIR" != "x"; then
         AC_DEFINE_UNQUOTED([LIBXL_FIRMWARE_DIR], ["$LIBXL_FIRMWARE_DIR"], [directory containing Xen firmware blobs])
     fi
Index: libvirt-1.2.15/src/libxl/libxl_domain.c
===================================================================
--- libvirt-1.2.15.orig/src/libxl/libxl_domain.c	2015-05-28 12:12:34.000000000 +0200
+++ libvirt-1.2.15/src/libxl/libxl_domain.c	2015-05-28 12:16:01.545492669 +0200
@@ -376,6 +376,22 @@ libxlDomainDefPostParse(virDomainDefPtr
         if (VIR_STRDUP(def->emulator, "/usr/bin/qemu-system-i386") < 0)
             return -1;
     }
+    /*
+     * Similar, but slightly more complicated is the loader case for HVM.
+     * That binary resides in a versioned path. So we need to convert both
+     * a standalone "hvmloader" and anything that came from an older libxen.
+     */
+    if (def->os.type == VIR_DOMAIN_OSTYPE_HVM && def->os.loader->path) {
+        virDomainLoaderDefPtr loader = def->os.loader;
+
+        if (STREQ(loader->path, "hvmloader") ||
+            strncmp(loader->path, "/usr/lib/xen-", 13))
+        {
+            VIR_FREE(loader->path);
+            if (VIR_STRDUP(loader->path, LIBXL_FIRMWARE_DIR "/hvmloader") < 0)
+                return -1;
+        }
+    }
     return 0;
 }
 
